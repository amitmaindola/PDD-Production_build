{"version":3,"sources":["home.js","App.js","reportWebVitals.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","palette","getContrastText","common","white","backgroundColor","Button","axios","require","default","useStyles","makeStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","margin","maxWidth","media","height","paper","spacing","gridContainer","justifyContent","mainContainer","background","backgroundRepeat","backgroundPosition","backgroundSize","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","heading","borderWhite","border","ImageUpload","classes","useState","selectedFile","setSelectedFile","preview","setPreview","data","setData","image","setImage","isLoading","setIsloading","confidence","sendFile","a","formData","FormData","append","method","url","res","status","useEffect","objectUrl","URL","createObjectURL","undefined","parseFloat","toFixed","Fragment","className","Container","disableGutters","Grid","container","direction","item","xs","Card","CardActionArea","CardMedia","component","title","CardContent","content","acceptedFiles","dropzoneText","onChange","files","length","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","class","CircularProgress","Typography","variant","noWrap","onClick","startIcon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88926709.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\n\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n    margin: 'auto',\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    background: `black`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"90vh\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: '#be6a77',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  },\r\n  heading:{\r\n    textAlign: 'center',\r\n    background: 'black',\r\n    color: 'white',\r\n    margin: '0px',\r\n    padding: '30px'\r\n  },\r\n  borderWhite: {\r\n    border: 'white 2px solid !important'\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: 'https://potato-disease-detector-api-3dhk23ywda-uc.a.run.app/predict',\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className={classes.heading}>\r\n        Potato Plant Disease Detector\r\n      </h1>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n                <DropzoneArea className={classes.borderWhite}\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={\"Drag and drop an image of a potato plant leaf to process\"}\r\n                  onChange={onSelectFile}\r\n                />\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      </Container >\r\n    </React.Fragment >\r\n  );\r\n};\r\n","import { ImageUpload } from \"./home\";\n\nfunction App() {\n  return <ImageUpload />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}